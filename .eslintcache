[{"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\context\\userContext\\userContext.js":"3","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\pricing\\pricing.js":"4","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\myprojectSidebar.js":"5","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\resources\\resources.js":"6","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\product\\products.js":"7","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\homescreen.js":"8","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\projectSidebar.js":"9","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectHeader\\projectHeader.js":"10","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\userStory\\userStory.js":"11","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\svg.js":"12","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\svg.js":"13","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\header\\header.js":"14","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\footer\\footer.js":"15","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\NoParticularProjectLeft\\NoParticularProject.js":"16","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\allProjectSummery\\allProjectSummery.js":"17","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewallSummery\\ViewAll.js":"18","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\CreateReq\\createReq.js":"19","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\JTBD\\JTBD.js":"20","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ParticularProjectHomepage\\ParticularProjectHomepage.js":"21","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewSummery\\viewSummery.js":"22","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\welcome\\welcome.js":"23","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signin\\signin.js":"24","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editUserstory\\editUserStory.js":"25","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ViewJTBD\\viewJTBD.js":"26","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editJTBD\\EditJTBD.js":"27","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signup\\signup.js":"28","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ProjectMembers\\ProjectMembers.js":"29"},{"size":457,"mtime":1610898484078,"results":"30","hashOfConfig":"31"},{"size":5652,"mtime":1611237444030,"results":"32","hashOfConfig":"31"},{"size":450,"mtime":1611036664178,"results":"33","hashOfConfig":"31"},{"size":154,"mtime":1610737196781,"results":"34","hashOfConfig":"31"},{"size":1067,"mtime":1610737206829,"results":"35","hashOfConfig":"31"},{"size":136,"mtime":1610737150937,"results":"36","hashOfConfig":"31"},{"size":155,"mtime":1610737188761,"results":"37","hashOfConfig":"31"},{"size":2626,"mtime":1611132161538,"results":"38","hashOfConfig":"31"},{"size":3072,"mtime":1611088994288,"results":"39","hashOfConfig":"31"},{"size":1264,"mtime":1611161901174,"results":"40","hashOfConfig":"31"},{"size":7523,"mtime":1611035668237,"results":"41","hashOfConfig":"31"},{"size":61888,"mtime":1610737167279,"results":"42","hashOfConfig":"31"},{"size":61888,"mtime":1610737217414,"results":"43","hashOfConfig":"31"},{"size":745,"mtime":1610737238017,"results":"44","hashOfConfig":"31"},{"size":1744,"mtime":1610737245377,"results":"45","hashOfConfig":"31"},{"size":732,"mtime":1610780954413,"results":"46","hashOfConfig":"31"},{"size":3762,"mtime":1611138312221,"results":"47","hashOfConfig":"31"},{"size":3772,"mtime":1611086067966,"results":"48","hashOfConfig":"31"},{"size":1147,"mtime":1610918565570,"results":"49","hashOfConfig":"31"},{"size":8081,"mtime":1611067074965,"results":"50","hashOfConfig":"31"},{"size":5405,"mtime":1611167898944,"results":"51","hashOfConfig":"31"},{"size":2860,"mtime":1611043109704,"results":"52","hashOfConfig":"31"},{"size":7512,"mtime":1610979427754,"results":"53","hashOfConfig":"31"},{"size":3524,"mtime":1611149219339,"results":"54","hashOfConfig":"31"},{"size":9032,"mtime":1611044036311,"results":"55","hashOfConfig":"31"},{"size":2949,"mtime":1611086878198,"results":"56","hashOfConfig":"31"},{"size":9649,"mtime":1611073352739,"results":"57","hashOfConfig":"31"},{"size":7861,"mtime":1611131779152,"results":"58","hashOfConfig":"31"},{"size":1829,"mtime":1611139474206,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ezkwb8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"62"},"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\index.js",[],["137","138"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\App.js",["139","140","141"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\context\\userContext\\userContext.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\pricing\\pricing.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\myprojectSidebar.js",["142"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport svgPath from \"./svg\";\r\n\r\nexport default function Mysidebar() {\r\n  const [path, setPath] = useState(\"/\");\r\n  let history = useHistory();\r\n\r\n  // it will give me the pathname\r\n  let pathname = history.location.pathname;\r\n\r\n  // if the route = '/' then we will rerender it to projects\r\n  if (pathname === \"/\") {\r\n    history.push(\"/myprojects\");\r\n    setPath(\"/myprojects\");\r\n  }\r\n\r\n  const handleClick = (e, paths) => {\r\n    history.push(paths);\r\n    setPath(paths);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"header_img\">\r\n        <svg\r\n          width=\"122\"\r\n          height=\"44\"\r\n          viewBox=\"0 0 122 44\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d={svgPath} fill=\"#D1D1D6\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"sidebar__items\" id=\"sidebar__div\">\r\n        <div className=\"items\">My Projects</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\resources\\resources.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\product\\products.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\homescreen.js",["143","144","145","146"],"import React from \"react\";\r\nimport Header from \"./header/header\";\r\nimport Footer from \"./footer/footer\";\r\nimport \"./homescreen.css\";\r\nimport image1 from \"../../shared/images/Rectangle 159.png\";\r\nimport image2 from \"../../shared/images/Rectangle 163.png\";\r\nimport image3 from \"../../shared/images/Rectangle 165.png\";\r\nimport image4 from \"../../shared/images/Rectangle 166.png\";\r\n\r\nconst HomeScreen = (props) => {\r\n  return (\r\n    <div className=\"homescreen-container\">\r\n      <Header />\r\n      <div className=\"homescreen-body-conatiner1\">\r\n        <div className=\"homescreen-text\">\r\n          <div>\r\n            Collect your product requirements and keep track of your project\r\n            with ease\r\n          </div>\r\n          <div className=\"get-started\">Get started</div>\r\n        </div>\r\n        <div className=\"homescreen-image\">\r\n          <img src={image1} />\r\n        </div>\r\n      </div>\r\n      <div className=\"homescreen-body-conatiner2\">\r\n        <div className=\"homescreen-text2\">\r\n          <span className=\"heading-container2\">\r\n            Collect and organise your Requirements\r\n          </span>\r\n          <span>-Within a uniform format</span>\r\n          <span>\r\n            -By Classification Type (new or existing enhancement) within\r\n            project(s)\r\n          </span>\r\n          <span>-By mode of recepient(Offline/Online).</span>\r\n        </div>\r\n        <div className=\"homescreen-image2\">\r\n          <img src={image2} />\r\n        </div>\r\n      </div>\r\n      <div className=\"homescreen-body-conatiner3\">\r\n        <div className=\"homescren-image3\">\r\n          <img src={image3} />\r\n        </div>\r\n        <div className=\"homescreen-text3\">\r\n          <span className=\"heading-container2\">\r\n            Provides an overall snapshot of requirement statistics\r\n          </span>\r\n          <br />\r\n          <span>\r\n            Prioritize your projects accordingly and easily keep track of each\r\n            of its progress\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"homescreen-body-conatiner4\">\r\n        <div className=\"homescreen-text4\">\r\n          <span className=\"heading-container2\">\r\n            Collaborate with other stakeholders for sharing/editing requirements\r\n          </span>\r\n          <span>\r\n            Integrated with slack/Gmail for easy sharing of requirement\r\n          </span>\r\n        </div>\r\n        <div className=\"homescren-image4\">\r\n          <img src={image4} />\r\n        </div>\r\n      </div>\r\n      {/*  Integrated with slack/Gmail for easy sharing of requirement */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\projectSidebar.js",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport svgPath from \"./svg\";\r\n\r\nexport default function ProjectSidebar() {\r\n  const [path, setPath] = useState(\"/\");\r\n  let history = useHistory();\r\n\r\n  const courseID = useParams().projectID;\r\n  let generalPath = \"/myprojects/\" + courseID + \"/\";\r\n\r\n  // it will give me the pathname\r\n  let pathname = history.location.pathname;\r\n\r\n  if (pathname[pathname.length - 1] !== \"/\") pathname += \"/\";\r\n\r\n  //route path will give you the pathname\r\n  let routePath = pathname.split(generalPath)[1];\r\n  routePath = routePath.split(\"/\")[0];\r\n\r\n  // if the route = '/' then we will rerender it to projects\r\n  if (pathname === generalPath) {\r\n    history.push(generalPath + \"projects\");\r\n  }\r\n\r\n  const handleClick = (e, paths) => {\r\n    history.push(generalPath + paths);\r\n    setPath(paths);\r\n  };\r\n\r\n  const checkClick = () => {\r\n    // setTimeout is used because when\r\n    setTimeout(() => {\r\n      /*\r\n         1. here I have collect the children of sidebar__items\r\n         2. if the children attribute matches to the path then we will chage it to active color\r\n         3. else to will change it to non active color\r\n      */\r\n      // console.log(path);\r\n      if (path === \"/\") setPath(routePath);\r\n      let header = document.getElementsByClassName(\"sidebar__items\");\r\n      let childs = header.item(0).children;\r\n      for (let i = 0; i < childs.length; i++) {\r\n        if (childs.item(i).getAttribute(\"path\") === path) {\r\n          childs.item(i).style.color = \"#DBDCE0\";\r\n          childs.item(i).style.backgroundColor = \"#565659\";\r\n        } else {\r\n          childs.item(i).style.backgroundColor = \"#363740\";\r\n          childs.item(i).style.color = \"#a4a6b3\";\r\n        }\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"header_img\">\r\n        <svg\r\n          width=\"122\"\r\n          height=\"44\"\r\n          viewBox=\"0 0 122 44\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d={svgPath} fill=\"#D1D1D6\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"sidebar__items\" id=\"sidebar__div\">\r\n        <div\r\n          onClick={(e) => handleClick(e, \"projects\")}\r\n          className=\"projects items\"\r\n          path=\"projects\"\r\n        >\r\n          My Projects\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"watchlist\")}\r\n          className=\"watchlist items\"\r\n          path=\"watchlist\"\r\n        >\r\n          My Watchlist\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"assigned_req\")}\r\n          className=\"assigned_req items\"\r\n          path=\"assigned_req\"\r\n        >\r\n          Assigned Requirements\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"project_members\")}\r\n          className=\"project_members items\"\r\n          path=\"project_members\"\r\n        >\r\n          Project Members\r\n        </div>\r\n      </div>\r\n\r\n      {checkClick()}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectHeader\\projectHeader.js",["148","149"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n// this logo will come from user\r\nimport logo from \"./logo.png\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"./../../../context/userContext/userContext\";\r\n\r\nexport default function ProjectHeader() {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [title, setTitle] = useState(\"My Projects\");\r\n  let projectID = useParams().projectID;\r\n  useEffect(() => {\r\n    getTitle();\r\n  }, []);\r\n\r\n  const getTitle = async () => {\r\n    let api = \"http://localhost:3001/api/project/get-projects\";\r\n    axios.get(api, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      let data = res.data;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i]._id === projectID) {\r\n          setTitle(data[i].projectName);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  let user_Name = JSON.parse(localStorage.getItem(\"Name\"));\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__title\">{title}</div>\r\n      <div className=\"user__info\">\r\n        <img className=\"img\" src={logo} alt={logo} />\r\n\r\n        <div className=\"user__name\"> {user_Name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\userStory\\userStory.js",["150","151","152"],"import React, { useState, useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function Userstory() {\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [priority, setPriority] = useState(\"Low\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    role: \"\",\r\n    want: \"\",\r\n    soThat: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    title,\r\n    role,\r\n    want,\r\n    soThat,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  let projectID = useParams().projectID;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/story/add-story\";\r\n    let story_Details = {\r\n      story_title: title,\r\n      as_a: role,\r\n      action_requirement: want,\r\n      action_output: soThat,\r\n      action_assigned_to: assignTo,\r\n      action_provided_by: providedBy,\r\n      action_received_mode: mode,\r\n      priority: priority,\r\n      details: details,\r\n    };\r\n\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.post(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"addreq\")[0];\r\n    path += \"viewall/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully captured !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>User Story role</h2>\r\n                <b>Story Title</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>As a</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Action to Be Done</h2>\r\n                <b>I Want To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"want\"\r\n                  value={want}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So That</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soThat\"\r\n                  value={soThat}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"High\")}\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Medium\")}\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Low\")}\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\svg.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\svg.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\header\\header.js",["153"],"import React from 'react';\r\nimport { Route,NavLink } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <div className=\"header-container\">\r\n            <div className=\"reqm-container\">ReqM !</div>\r\n            <div className=\"link-container\">\r\n               <NavLink to=\"/product\" className=\"link-inside-container\">Product</NavLink>\r\n               <NavLink to=\"/resource\" className=\"link-inside-container\">Resources</NavLink>\r\n               <NavLink to=\"/pricing\" className=\"link-inside-container\">Pricing</NavLink>\r\n               <NavLink to=\"/signin\" className=\"link-container-button link-inside-container\">Sign In</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\footer\\footer.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\NoParticularProjectLeft\\NoParticularProject.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\allProjectSummery\\allProjectSummery.js",["154","155","156","157","158","159"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport { GoDiffAdded } from \"react-icons/go\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst AllProjectSummary = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState([]);\r\n  const [loged, setLoged] = useState(0);\r\n  const [priority, setPriority] = useState(0);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    getdata();\r\n    getloged();\r\n  }, []);\r\n\r\n  const getdata = async () => {\r\n    let api = \"http://localhost:3001/api/project/get-projects\";\r\n    axios.get(api, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n\r\n  const getloged = async () => {\r\n    let api = \"http://localhost:3001/api/project/get-projects\";\r\n    axios.get(api, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      console.log(res.data);\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        let api =\r\n          \"http://localhost:3001/api/story/get-stories/projectId/\" +\r\n          `${res.data[i]._id}`;\r\n        axios\r\n          .get(api, {\r\n            headers: { authtoken: `${user}` },\r\n          })\r\n          .then((res) => {\r\n            //console.log(res.data);\r\n            if (res.data.length !== 0) setLoged(res.data.length + loged);\r\n            let cnt = 0;\r\n            if (res.data.length != 0) {\r\n              for (let i = 0; i < res.data.length; i++) {\r\n                if (res.data[i].storyDetails.priority === \"High\") cnt++;\r\n              }\r\n            }\r\n            setPriority(cnt + priority);\r\n          });\r\n      }\r\n    });\r\n  };\r\n  const pushHistory = (id) => {\r\n    let path = history.location.pathname;\r\n    if (path[path.length - 1] !== \"/\") path += \"/\";\r\n    history.push(path + id);\r\n  };\r\n\r\n  const obj = {\r\n    view: false,\r\n  };\r\n  const hStyle = { color: \"grey\" };\r\n\r\n  return (\r\n    <div className=\"allProjectSummery__container\">\r\n      <h3>&nbsp; &nbsp; All Project Summary</h3>\r\n\r\n      <div className=\"card-container\">\r\n        <p className=\"text-cordinate\">Active Project Spaces</p>\r\n        <h3 className=\"content-align\">{data.length}</h3>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        <p className=\"text-cordinate\">Requirement Logded</p>\r\n        <h3 className=\"content-align\">{loged}</h3>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        <p className=\"text-cordinate\">Priority Requirements</p>\r\n        <h3 className=\"content-align-p\">{priority}</h3>\r\n      </div>\r\n\r\n      <h3>&nbsp; &nbsp; Active Project Spaces</h3>\r\n      {/* this thing will come from map and we need to click onClick on that*/}\r\n      {}\r\n      {data.slice(0, data.length).map((item, index) => (\r\n        <div\r\n          className={`card-container box-p${index % 2}`}\r\n          key={index}\r\n          onClick={() => pushHistory(item._id)}\r\n        >\r\n          <p className=\"text-cordinate-p\">{item.projectName}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"card-container\">\r\n        <div className=\"box-b\">\r\n          <h2 style={hStyle}>\r\n            <IconContext.Provider\r\n              value={{\r\n                color: \"white\",\r\n                className: \"global-class-name react-icons\",\r\n              }}\r\n            >\r\n              <GoDiffAdded />\r\n              Add Project\r\n            </IconContext.Provider>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AllProjectSummary);\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewallSummery\\ViewAll.js",["160","161","162","163","164","165","166","167"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { GoDiffAdded } from \"react-icons/go\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ViewAll = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState([]);\r\n  const [datajtbd, setDatajtbd] = useState([]);\r\n  let history = useHistory();\r\n  let projectID = useParams().projectID;\r\n  useEffect(() => {\r\n    getuserStory();\r\n    getjtbd();\r\n  }, [projectID]);\r\n  const getuserStory = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setData(res.data);\r\n      });\r\n  };\r\n\r\n  const getjtbd = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setDatajtbd(res.data);\r\n      });\r\n  };\r\n  const historyView = (id, name) => {\r\n    let path = history.location.pathname;\r\n    if (path[path.length - 1] !== \"/\") path += \"/\";\r\n\r\n    path += name;\r\n    history.push(path + id);\r\n  };\r\n\r\n  const obj = {\r\n    view: false,\r\n  };\r\n  const hStyle = { color: \"grey\" };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"table-data\">\r\n        <h5>All Requirements</h5>\r\n        <table className=\"table border shadow center mt-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Requirement</th>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Date</th>\r\n              <th scope=\"col\">Priority</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.slice(0, data.length).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">Req: {index + 1}</th>\r\n                <td\r\n                  className=\"story__title\"\r\n                  onClick={() => historyView(user._id, \"\")}\r\n                >\r\n                  {user.storyDetails.storyTitle}\r\n                </td>\r\n                <td>{user.storyDetails.date}</td>\r\n                <td className=\"text-danger\">{user.storyDetails.priority}</td>\r\n                <td>\r\n                  <Link className=\" mr-2\" to={`/users/${user.id}`}>\r\n                    <BiDotsVerticalRounded />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n\r\n          <tbody>\r\n            {datajtbd.slice(0, datajtbd.length).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">JTBD: {index + 1}</th>\r\n                <td\r\n                  className=\"story__title\"\r\n                  onClick={() => historyView(user._id, \"jtbd/\")}\r\n                >\r\n                  {user.JobTobeDone.description}\r\n                </td>\r\n                <td>{100}</td>\r\n                <td className=\"text-danger\">{user.JobTobeDone.priority}</td>\r\n                <td>\r\n                  <Link className=\" mr-2\" to={`/users/${user.id}`}>\r\n                    <BiDotsVerticalRounded />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAll;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\CreateReq\\createReq.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\JTBD\\JTBD.js",["168","169","170"],"import React, { useState, useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function Userstory() {\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [priority, setPriority] = useState(\"Low\");\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n    persona: \"\",\r\n    situation: \"\",\r\n    whatiwant: \"\",\r\n    soican: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    description,\r\n    persona,\r\n    situation,\r\n    whatiwant,\r\n    soican,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  let projectID = useParams().projectID;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/jtbd/add-jtbd\";\r\n    let story_Details = {\r\n      description: description,\r\n      persona: persona,\r\n      situation: situation,\r\n      whatiwant: whatiwant,\r\n      soican: soican,\r\n      assignTo: assignTo,\r\n      details: details,\r\n      watchlist: watchlist,\r\n      providedBy: providedBy,\r\n      mode: mode,\r\n      priority: priority,\r\n    };\r\n    //console.log(story_Details);\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.post(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n\r\n  //###########################     Change #######################\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"addreq\")[0];\r\n    path += \"viewall/jtbd/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully captured !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Base details</h2>\r\n                <b>Description</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Persona</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"persona\"\r\n                  value={persona}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Job to Be Done</h2>\r\n                <b>Situation</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"situation\"\r\n                  value={situation}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>What I Want</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"whatiwant\"\r\n                  value={whatiwant}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So I can</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soican\"\r\n                  value={soican}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"High\")}\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Medium\")}\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Low\")}\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ParticularProjectHomepage\\ParticularProjectHomepage.js",["171","172","173","174"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { GoDiffAdded } from \"react-icons/go\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport \"./style.css\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nconst ParticularPageProject = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState([]);\r\n  const [assignedStory, setAssignedStory] = useState(0);\r\n  const [assignedjtbd, setAssignjtbd] = useState(0);\r\n  let projectID = useParams().projectID;\r\n  useEffect(() => {\r\n    getuserStory();\r\n    getAssignStory();\r\n    getAssignjtbd();\r\n  }, [projectID]);\r\n\r\n  const getuserStory = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setData(res.data);\r\n      });\r\n  };\r\n  const getAssignStory = () => {\r\n    let email = JSON.parse(localStorage.getItem(\"email\"));\r\n    let API = \"http://localhost:3001/api/story/get-all-assigned\";\r\n    const Cre = {\r\n      email: email,\r\n    };\r\n    axios.post(API, Cre, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      //console.log(res.data);\r\n      setAssignedStory(res.data.length);\r\n    });\r\n  };\r\n\r\n  const getAssignjtbd = () => {\r\n    let email = JSON.parse(localStorage.getItem(\"email\"));\r\n    let API = \"http://localhost:3001/api/jtbd/get-all-assigned\";\r\n    const Cre = {\r\n      email: email,\r\n    };\r\n    axios.post(API, Cre, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      // console.log(res.data);\r\n      setAssignjtbd(res.data.length);\r\n    });\r\n  };\r\n  //getAssignjtbd();\r\n  //getAssignStory();\r\n  //getuserStory();\r\n  const PriorityHigh = (data) => {\r\n    let cnt = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].storyDetails.priority === \"High\") cnt++;\r\n    }\r\n\r\n    return cnt;\r\n  };\r\n\r\n  const obj = {\r\n    view: false,\r\n  };\r\n  const hStyle = { color: \"grey\" };\r\n\r\n  // to redirect the route\r\n  let history = useHistory();\r\n  let path = history.location.pathname;\r\n  if (path[path.length - 1] !== \"/\") path += \"/\";\r\n  // clicking pushing the history of adduserstory\r\n  const pushReq = () => {\r\n    history.push(path + \"addreq\");\r\n  };\r\n\r\n  // clicking pushing the history of viewall\r\n\r\n  const pushHistoryView = () => {\r\n    history.push(path + \"viewall\");\r\n  };\r\n  const historyView = (id) => {\r\n    let path = history.location.pathname;\r\n    if (path[path.length - 1] !== \"/\") path += \"/\";\r\n    path += \"viewall/\";\r\n    history.push(path + id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"box\" onClick={pushReq}>\r\n        <h2 style={hStyle}>\r\n          <IconContext.Provider\r\n            value={{\r\n              color: \"white\",\r\n              className: \"global-class-name react-icons\",\r\n            }}\r\n          >\r\n            <GoDiffAdded />\r\n            Add Requirement\r\n          </IconContext.Provider>\r\n        </h2>\r\n      </div>\r\n      <h3>&nbsp; &nbsp; Requirement Summary</h3>\r\n      <div className=\"card__container__wraper\">\r\n        <div className=\"card-container\">\r\n          <p className=\"text-cordinate\">Requirements Logded</p>\r\n          <h3 className=\"content-align\">{data.length}</h3>\r\n        </div>\r\n        <div className=\"card-container\">\r\n          <p className=\"text-cordinate\">Priority Requirement</p>\r\n          <h3 className=\"content-align-p\">{PriorityHigh(data)}</h3>\r\n        </div>\r\n        <div className=\"card-container\">\r\n          <p className=\"text-cordinate\">Assigned To Me</p>\r\n          <h3 className=\"content-align\">{assignedStory + assignedjtbd}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"table-data\">\r\n        <div className=\"box\">\r\n          <h5 className=\"box2\">Recent Requirements</h5>\r\n          <h6 style={hStyle} className=\"box1\" onClick={pushHistoryView}>\r\n            View All\r\n          </h6>\r\n        </div>\r\n        <table className=\"table border shadow center mt-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Requirement</th>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Date</th>\r\n              <th scope=\"col\">Priority</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.slice(0, 3).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">Req: {index + 1}</th>\r\n                <td\r\n                  onClick={() => historyView(user._id)}\r\n                  className=\"story__title\"\r\n                >\r\n                  {user.storyDetails.storyTitle}\r\n                </td>\r\n                <td>{100}</td>\r\n                <td className=\"text-danger\">{user.storyDetails.priority}</td>\r\n                <td>\r\n                  <Link className=\" mr-2\" to={`/users/${user.id}`}>\r\n                    <BiDotsVerticalRounded />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParticularPageProject;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewSummery\\viewSummery.js",["175","176","177"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\nimport \"./style.css\";\r\nexport default function ViewSummery() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [data, setData] = useState({});\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  let history = useHistory();\r\n  let path = history.location.pathname;\r\n  if (path[path.length - 1] !== \"/\") path += \"/\";\r\n  //console.log(projectID);\r\n  //console.log(storyID);\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [projectID, storyID]);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            setData(res.data[i].storyDetails);\r\n          }\r\n        }\r\n      });\r\n  };\r\n  //console.log(data);\r\n\r\n  return (\r\n    <div className=\"viewSummery\">\r\n      <div className=\"view__story view__part1\">\r\n        <div className=\"userstory__header\">Story Title</div>\r\n        <div className=\"userstory__data\">{data.storyTitle}</div>\r\n        <div className=\"userstory__header\">As a</div>\r\n        <div className=\"userstory__data\">{data.asA}</div>\r\n        <div className=\"userstory__header\">I Want to</div>\r\n        <div className=\"userstory__data\">{data.actionRequirement}</div>\r\n      </div>\r\n      <div className=\"view__story view__part2\">\r\n        <div className=\"userstory__header\">So That</div>\r\n        <div className=\"userstory__data\">{data.actionOutput}</div>\r\n        <div className=\"userstory__header\">Provided By</div>\r\n        <div className=\"userstory__data\">{data.actionProvidedBy}</div>\r\n        <div className=\"userstory__header\">Mode</div>\r\n        <div className=\"userstory__data\">{data.actionReceivedMode}</div>\r\n      </div>\r\n      <div className=\"view__story view__part3\">\r\n        <div className=\"userstory__header\">Additional Details</div>\r\n        <div className=\"userstory__data\">{data.details}</div>\r\n        <div className=\"userstory__header\">Assigned To</div>\r\n        <div className=\"userstory__data\">{data.actionAssignedTo}</div>\r\n        <div className=\"userstory__header\">Priortization</div>\r\n        <div className=\"userstory__data userstory__data__priority\">\r\n          {data.priority}\r\n        </div>\r\n      </div>\r\n      <div className=\"div__button\">\r\n        <div\r\n          className=\"BUTTON\"\r\n          onClick={() => {\r\n            history.push(path + \"edit\");\r\n          }}\r\n        >\r\n          Edit\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\welcome\\welcome.js",["178","179","180","181","182","183","184","185"],"import React, { useContext, useState } from \"react\";\r\nimport \"./welcome.css\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport {\r\n  SettingsApplicationsRounded,\r\n  SettingsInputAntenna,\r\n  SwapCalls,\r\n} from \"@material-ui/icons\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { UserContext } from \"./../../../context/userContext/userContext\";\r\nfunction Welcome() {\r\n  const [projname, setProjName] = useState(\"\");\r\n  const [orgname, setOrgName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [input, showInput] = useState(true);\r\n  const [checked, setChecked] = useState(false);\r\n  //this initialises the state to contain empty array\r\n  const [users, setUsers] = useContext(UserContext).user;\r\n  // const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  //const [modalStyle] = useState(getModalStyle);\r\n  const handleClick = (event) => {\r\n    if (event.target.id == \"orgname\") setOrgName(event.target.value);\r\n    else if (event.target.id == \"projname\") setProjName(event.target.value);\r\n    if (event.target.id == \"email\") setEmail(event.target.value);\r\n    //console.log(event.target.id+\r\n    //orgname+\"\"+projname);\r\n  };\r\n  const toggleChecked = () => {\r\n    console.log(\"git push show\");\r\n    setChecked((prev) => !prev);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    showInput(true);\r\n    setEmail(\"\");\r\n    setOpen(false);\r\n  };\r\n  const handleContinue = () => {\r\n    //console.log(projname+\" \"+orgname);\r\n    if (!projname || !orgname) console.log(\"input both the fields\");\r\n    else {\r\n      console.log(orgname + \" \" + projname + \" \" + users);\r\n      //routing to the projects space page\r\n    }\r\n  };\r\n  const handleEnter = (event) => {\r\n    if (event.key == \"Enter\") {\r\n      if (validator.isEmail(email)) {\r\n        //validate\r\n        setUsers(users.concat(email));\r\n        setEmail(\"\");\r\n        showInput(false);\r\n        console.log(\"in handle Enter func \" + users);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Invalid Email\",\r\n          text: \"Please enter a valid Email\",\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleAddOnMain = () => {\r\n    if (!projname || !orgname) {\r\n      Swal.fire({\r\n        title: \"Fill all the fields\",\r\n        text: \"Please enter all entries\",\r\n        icon: \"warning\",\r\n      });\r\n    } else {\r\n      handleOpen();\r\n    }\r\n  };\r\n  const onSaveClick = () => {\r\n    handleClose();\r\n    console.log(orgname + \" \" + projname + \" \" + users);\r\n  };\r\n  const handleAddOnModal = () => {\r\n    if (input == false) {\r\n      showInput(true);\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Invalid Email\",\r\n        text: \"Please Fill the email above\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  };\r\n\r\n  const IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n      width: 44.84,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      \"&$checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#E24429\",\r\n        \"& + $track\": {\r\n          backgroundColor: \" black\",\r\n          opacity: 1,\r\n          border: \"none\",\r\n        },\r\n      },\r\n      \"&$focusVisible $thumb\": {\r\n        color: \" #E24429\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor: \"#E24429\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\", \"border\"]),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n  }))(({ classes, ...props }) => {\r\n    return (\r\n      <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n          root: classes.root,\r\n          switchBase: classes.switchBase,\r\n          thumb: classes.thumb,\r\n          track: classes.track,\r\n          checked: classes.checked,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n  const renderInput = (\r\n    <div className=\"input-container\">\r\n      <span>Input Email Id</span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        onChange={handleClick}\r\n        onKeyDown={handleEnter}\r\n        value={email}\r\n      />\r\n    </div>\r\n  );\r\n  const body = (\r\n    <div className=\"dialog-container\">\r\n      {input ? renderInput : <div></div>}\r\n      <div className=\"add-container\">\r\n        <div id=\"addicon\" onClick={handleAddOnModal}>\r\n          <AddBoxIcon />\r\n        </div>\r\n        <span>Add More Members</span>\r\n      </div>\r\n      <h1>Collaborators can</h1>\r\n      <div id=\"switch\">\r\n        <span style={{ color: \"black\" }}>Add more people</span>\r\n        {/*switch button here*/}\r\n        <FormControlLabel\r\n          className=\"btn-switch\"\r\n          control={\r\n            <IOSSwitch\r\n              size=\"Normal\"\r\n              checked={checked}\r\n              onChange={toggleChecked}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"btn-save\">\r\n        <button className=\"save-btn\" onClick={onSaveClick}>\r\n          {\" \"}\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <header className=\"page-header\">\r\n        <nav>\r\n          <h2 className=\"logo\">ReqM!</h2>\r\n          <ul>\r\n            <li>Features</li>\r\n            <li>Pricing</li>\r\n            <li>Company</li>\r\n            <li>Blog</li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main class=\"page-main\">\r\n        <div>\r\n          <h1>Welcome Divesh!</h1>\r\n          <h3>Add a new Project and Maintain Requirements Within</h3>\r\n        </div>\r\n        <form action=\"\">\r\n          <label for=\"orgname\">Organisation Name</label>\r\n\r\n          <input\r\n            className=\"fieldinput\"\r\n            type=\"text\"\r\n            id=\"orgname\"\r\n            onChange={handleClick}\r\n            name=\"orgname\"\r\n            placeholder=\"abc.org\"\r\n            value={orgname}\r\n          />\r\n\r\n          <label for=\"projname\">Project Name</label>\r\n\r\n          <input\r\n            className=\"fieldinput\"\r\n            type=\"text\"\r\n            id=\"projname\"\r\n            onChange={handleClick}\r\n            name=\"projectname\"\r\n            placeholder=\"Smart Watch Application\"\r\n            value={projname}\r\n          />\r\n\r\n          <section id=\"amu\">\r\n            {/*<p>{isDialogOpen}</p>*/}\r\n            <PersonAddIcon onClick={handleAddOnMain} />\r\n            <span>Add More Users</span>\r\n            <Modal open={open} onClose={handleClose} style={customStyles}>\r\n              {body}\r\n            </Modal>\r\n          </section>\r\n          <button className=\"btn-continue\" onClick={handleContinue}>\r\n            Continue\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Welcome;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signin\\signin.js",["186","187"],"import React, { useContext, useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./signin.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nconst Signin = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  var history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.id == \"email\") {\r\n      setEmail(e.target.value);\r\n    } else {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (validator.isEmail(email)) {\r\n      // console.log(password);\r\n      axios\r\n        .post(\"http://localhost:3001/api/user/login\", {\r\n          email,\r\n          password,\r\n        })\r\n        .then((res) => {\r\n          if (res.data && res.data.message) {\r\n            localStorage.setItem(\r\n              \"auth_token\",\r\n              JSON.stringify(res.data.auth_token)\r\n            );\r\n            localStorage.setItem(\"Name\", JSON.stringify(res.data.Name));\r\n            localStorage.setItem(\"email\", JSON.stringify(res.data.email));\r\n            //console.log(res.data);\r\n            setUser(res.data.auth_token);\r\n            //console.log(res.data);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            history.push(\"/\");\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: `${res.data.error}`,\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: `${err}`,\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Email Invalid\",\r\n        text: \"Please Enter Valid Email\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n    // let hashPwd=password;\r\n    // hashPwd=await bcrypt.hash(password,10);\r\n  };\r\n\r\n  return (\r\n    <div className=\"parentConatiner\">\r\n      <div className=\"headerContainerSignIn\">\r\n        <span className=\"signinOptions\">About</span>\r\n        <span className=\"signinOptions\">Privacy</span>\r\n        <span className=\"signinOptions\">Terms</span>\r\n      </div>\r\n      <div className=\"signinBody\">\r\n        <span className=\"companyName signinReqm\">ReqM !</span>\r\n        <div className=\"signinBox\">\r\n          <div className=\"signInContent\">\r\n            <span className=\"signInHeading\">SignIn</span>\r\n            <span className=\"singinMessage\">Welcome we miss you</span>\r\n            <input\r\n              type=\"email\"\r\n              className=\"signupInput\"\r\n              onChange={handleInput}\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n            />\r\n            <input\r\n              style={{ marginTop: \"10px\" }}\r\n              type=\"password\"\r\n              className=\"signupInput\"\r\n              onChange={handleInput}\r\n              id=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n            />\r\n            <div className=\"rememberAndPassword\">\r\n              <span>Remember me</span>\r\n              <span>Forgot Password</span>\r\n            </div>\r\n            <button className=\"singinButton\" onClick={handleSignIn}>\r\n              SignIn\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editUserstory\\editUserStory.js",["188","189","190","191","192","193","194","195","196"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function EditUserstory() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState();\r\n  const [id, setID] = useState();\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    role: \"\",\r\n    want: \"\",\r\n    soThat: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n    priority: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    title,\r\n    role,\r\n    want,\r\n    soThat,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n    priority,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, []);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            //console.log(res.data[i].storyDetails);\r\n            let Details = {\r\n              title: res.data[i].storyDetails.storyTitle,\r\n              role: res.data[i].storyDetails.asA,\r\n              want: res.data[i].storyDetails.actionRequirement,\r\n              soThat: res.data[i].storyDetails.actionOutput,\r\n              assignTo: res.data[i].storyDetails.actionAssignedTo,\r\n              details: res.data[i].storyDetails.details,\r\n              providedBy: res.data[i].storyDetails.actionProvidedBy,\r\n              mode: res.data[i].storyDetails.actionReceivedMode,\r\n              priority: res.data[i].storyDetails.priority,\r\n            };\r\n            // console.log(Details);\r\n            // console.log(res.data[i].storyDetails);\r\n            setFormData({ ...Details });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/story/update-story/\" + `${storyID}`;\r\n    let story_Details = {\r\n      story_title: title,\r\n      as_a: role,\r\n      action_requirement: want,\r\n      action_output: soThat,\r\n      action_assigned_to: assignTo,\r\n      action_provided_by: providedBy,\r\n      action_received_mode: mode,\r\n      priority: priority,\r\n      details: details,\r\n    };\r\n\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.put(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong!\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"edit\")[0];\r\n\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully Updated !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>User Story role</h2>\r\n                <b>Story Title</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>As a</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Action to Be Done</h2>\r\n                <b>I Want To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"want\"\r\n                  value={want}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So That</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soThat\"\r\n                  value={soThat}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"High\" })\r\n                    }\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Medium\" })\r\n                    }\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Low\" })\r\n                    }\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ViewJTBD\\viewJTBD.js",["197","198","199"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\nimport \"./style.css\";\r\nexport default function ViewSummery() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [data, setData] = useState({});\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  let history = useHistory();\r\n  let path = history.location.pathname;\r\n  if (path[path.length - 1] !== \"/\") path += \"/\";\r\n  //console.log(projectID);\r\n  //console.log(storyID);\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [projectID, storyID]);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            setData(res.data[i].JobTobeDone);\r\n          }\r\n        }\r\n      });\r\n  };\r\n  //console.log(data);\r\n\r\n  return (\r\n    <div className=\"viewSummery\">\r\n      <div className=\"view__story view__part1\">\r\n        <div className=\"userstory__header\">Description</div>\r\n        <div className=\"userstory__data\">{data.description}</div>\r\n        <div className=\"userstory__header\">Persona</div>\r\n        <div className=\"userstory__data\">{data.persona}</div>\r\n        <div className=\"userstory__header\">Situation</div>\r\n        <div className=\"userstory__data\">{data.situation}</div>\r\n        <div className=\"userstory__header\">What I Want</div>\r\n        <div className=\"userstory__data\">{data.whatiwant}</div>\r\n      </div>\r\n      <div className=\"view__story view__part2\">\r\n        <div className=\"userstory__header\">So I can</div>\r\n        <div className=\"userstory__data\">{data.soican}</div>\r\n        <div className=\"userstory__header\">Provided By</div>\r\n        <div className=\"userstory__data\">{data.providedBy}</div>\r\n        <div className=\"userstory__header\">Mode</div>\r\n        <div className=\"userstory__data\">{data.mode}</div>\r\n        <div className=\"userstory__header\">Priortization</div>\r\n        <div className=\"userstory__data userstory__data__priority\">\r\n          {data.priority}\r\n        </div>\r\n      </div>\r\n      <div className=\"view__story view__part3\">\r\n        <div className=\"userstory__header\">Additional Details</div>\r\n        <div className=\"userstory__data\">{data.details}</div>\r\n        <div className=\"userstory__header\">Assigned To</div>\r\n        <div className=\"userstory__data\">{data.assignTo}</div>\r\n      </div>\r\n      <div className=\"div__button\">\r\n        <div\r\n          className=\"BUTTON\"\r\n          onClick={() => {\r\n            history.push(path + \"edit\");\r\n          }}\r\n        >\r\n          Edit\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editJTBD\\EditJTBD.js",["200","201","202","203","204","205","206"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function EditJTBD() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n    persona: \"\",\r\n    situation: \"\",\r\n    whatiwant: \"\",\r\n    soican: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n    priority: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    description,\r\n    persona,\r\n    situation,\r\n    whatiwant,\r\n    soican,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n    priority,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, []);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            //console.log(res.data[i]);\r\n            let Details = {\r\n              description: res.data[i].JobTobeDone.description,\r\n              persona: res.data[i].JobTobeDone.persona,\r\n              situation: res.data[i].JobTobeDone.situation,\r\n              whatiwant: res.data[i].JobTobeDone.whatiwant,\r\n              soican: res.data[i].JobTobeDone.soican,\r\n              assignTo: res.data[i].JobTobeDone.assignTo,\r\n              details: res.data[i].JobTobeDone.details,\r\n              watchlist: res.data[i].JobTobeDone.watchlist,\r\n              providedBy: res.data[i].JobTobeDone.providedBy,\r\n              mode: res.data[i].JobTobeDone.mode,\r\n              priority: res.data[i].JobTobeDone.priority,\r\n            };\r\n            // console.log(Details);\r\n            // console.log(res.data[i].storyDetails);\r\n            setFormData({ ...Details });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/jtbd/update-jtbd/\" + `${storyID}`;\r\n    let story_Details = {\r\n      description: description,\r\n      persona: persona,\r\n      situation: situation,\r\n      whatiwant: whatiwant,\r\n      soican: soican,\r\n      assignTo: assignTo,\r\n      details: details,\r\n      watchlist: watchlist,\r\n      providedBy: providedBy,\r\n      mode: mode,\r\n      priority: priority,\r\n    };\r\n    //console.log(story_Details);\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.put(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n\r\n  //###########################     Change #######################\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"edit\")[0];\r\n    //path += \"/viewall/jtbd/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully Updated !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Base details</h2>\r\n                <b>Description</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Persona</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"persona\"\r\n                  value={persona}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Job to Be Done</h2>\r\n                <b>Situation</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"situation\"\r\n                  value={situation}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>What I Want</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"whatiwant\"\r\n                  value={whatiwant}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So I can</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soican\"\r\n                  value={soican}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"High\" })\r\n                    }\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Medium\" })\r\n                    }\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Low\" })\r\n                    }\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signup\\signup.js",["207","208","209","210","211","212","213","214","215","216","217"],"import React, { useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport \"./signup.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport ProductSquad from \"../../shared/images/Group 2004.png\";\r\nimport Business from \"../../shared/images/Group 2005.png\";\r\nimport CustomerSupport from \"../../shared/images/Group 2006.png\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { Base64 } from \"js-base64\";\r\nimport axios from \"axios\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst Signup = () => {\r\n  const [name, setName] = useState(() => \"\");\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState(() => \"\");\r\n  const [verifyPassword, setVerifyPassword] = useState(() => \"\");\r\n  const [selectedImg, setSelectedImg] = useState();\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    if (event.target.id == \"name\") {\r\n      setName(event.target.value);\r\n    } else if (event.target.id == \"email\") {\r\n      setEmail(event.target.value);\r\n    } else if (event.target.id == \"password\") {\r\n      setPassword(event.target.value);\r\n    } else {\r\n      setVerifyPassword(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSignup = async (e) => {\r\n    if (name && email && password && verifyPassword && selectedImg) {\r\n      const value = validator.isEmail(email);\r\n      if (!value) {\r\n        Swal.fire({\r\n          title: \"Invalid Email\",\r\n          text: \"Please enter a valid email\",\r\n          icon: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (password !== verifyPassword) {\r\n        Swal.fire({\r\n          title: \"Passwords Mismatch\",\r\n          text: \"Passwords didn't match. Try again.\",\r\n          icon: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        setLoader(true);\r\n        let hashPwd = password;\r\n        hashPwd = await bcrypt.hash(password, 10);\r\n        let code;\r\n        if (selectedImg == \"business\") {\r\n          code = Base64.encode(Business);\r\n        } else if (selectedImg == \"product\") {\r\n          code = Base64.encode(ProductSquad);\r\n        } else {\r\n          code = Base64.encode(CustomerSupport);\r\n        }\r\n        axios\r\n          .post(\"http://localhost:3001/api/user/register\", {\r\n            name,\r\n            email,\r\n            password: hashPwd,\r\n            profilePhoto: code,\r\n          })\r\n          .then((res) => {\r\n            setLoader(false);\r\n            if (res.data && res.data.message) {\r\n              setEmail(\"\");\r\n              setName(\"\");\r\n              setPassword(\"\");\r\n              setVerifyPassword(\"\");\r\n              setSelectedImg(\"\");\r\n              Swal.fire({\r\n                title: \"Success\",\r\n                text: `${res.data.message}`,\r\n                icon: \"success\",\r\n              });\r\n            } else {\r\n              Swal.fire({\r\n                title: \"Error\",\r\n                text: `${res.data.error}`,\r\n                icon: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: `${err}`,\r\n              icon: \"error\",\r\n            });\r\n          });\r\n      } catch (err) {\r\n        Swal.fire({\r\n          title: \"Error\",\r\n          text: `${err}`,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    } else {\r\n      if (!name || !email || !password || !verifyPassword) {\r\n        Swal.fire({\r\n          title: \"Warning\",\r\n          text: \"Please Fill All the fields\",\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Warning\",\r\n          text: \"Please Select Avatar\",\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageClick = (e) => {\r\n    setSelectedImg(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"signUpPage\">\r\n        <div className=\"imageContainer\">\r\n          <div className=\"firstHalfBody\">\r\n            <span className=\"companyName\">ReqM !</span>\r\n            <div className=\"optionsConatiner\">\r\n              <span>→ Add Members</span>\r\n              <span>→ Create Requirements</span>\r\n              <span>→ Triage & Monitor</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"firstHalfFooter\">\r\n            <NavLink to=\"/about\" className=\"link-inside-container\">\r\n              About\r\n            </NavLink>\r\n            <NavLink to=\"/privacy\" className=\"link-inside-container\">\r\n              Privacy\r\n            </NavLink>\r\n            <NavLink to=\"/terms\" className=\"link-inside-container\">\r\n              Terms\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"signupContainer\">\r\n          {loader ? <LinearProgress color=\"primary\" /> : <></>}\r\n          <span className=\"signupHeading\">Signup</span>\r\n          <div className=\"signUpSubContainer\">\r\n            <div className=\"signUpInputContainer\">\r\n              <span className=\"inputLabel\">Name</span>\r\n              <input\r\n                id=\"name\"\r\n                onChange={handleClick}\r\n                className=\"signupInput\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n              />\r\n              <span className=\"inputLabel\">Email</span>\r\n              <input\r\n                id=\"email\"\r\n                onChange={handleClick}\r\n                className=\"signupInput\"\r\n                type=\"email\"\r\n                placeholder=\"Work EmailId\"\r\n                value={email}\r\n              />\r\n              <span className=\"inputLabel\">Password</span>\r\n              <input\r\n                id=\"password\"\r\n                onChange={handleClick}\r\n                className=\"signupInput\"\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n              />\r\n              <span className=\"inputLabel\">Repeat Password</span>\r\n              <input\r\n                id=\"repassword\"\r\n                onChange={handleClick}\r\n                className=\"signupInput\"\r\n                type=\"password\"\r\n                placeholder=\"Re-enter password\"\r\n                value={verifyPassword}\r\n              />\r\n            </div>\r\n            <div className=\"signUpImageContainer\">\r\n              <span>Select your avatar</span>\r\n              <div className=\"signupImages\">\r\n                <img\r\n                  id=\"product\"\r\n                  style={\r\n                    selectedImg == \"product\"\r\n                      ? { border: \"1px solid black\" }\r\n                      : {}\r\n                  }\r\n                  onClick={handleImageClick}\r\n                  src={ProductSquad}\r\n                  className=\"individualImage\"\r\n                />\r\n                <img\r\n                  id=\"business\"\r\n                  style={\r\n                    selectedImg == \"business\"\r\n                      ? { border: \"1px solid black\" }\r\n                      : {}\r\n                  }\r\n                  onClick={handleImageClick}\r\n                  src={Business}\r\n                  className=\"individualImage\"\r\n                />\r\n                <img\r\n                  id=\"customer\"\r\n                  style={\r\n                    selectedImg == \"customer\"\r\n                      ? { border: \"1px solid black\" }\r\n                      : {}\r\n                  }\r\n                  onClick={handleImageClick}\r\n                  src={CustomerSupport}\r\n                  className=\"individualImage\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"signUpContainer\">\r\n              <button className=\"signUpButton\" onClick={handleSignup}>\r\n                Sing Up\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ProjectMembers\\ProjectMembers.js",["218","219","220","221","222","223","224","225","226"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { GoDiffAdded } from \"react-icons/go\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ProjectMembers = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState([]);\r\n  let history = useHistory();\r\n  let projectID = useParams().projectID;\r\n\r\n  useEffect(() => {\r\n    getNames();\r\n  }, []);\r\n\r\n  const getNames = async () => {\r\n    let api = \"http://localhost:3001/api/project/get-projects\";\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (projectID === res.data[i]._id)\r\n            setData(res.data[i].usersAssociated);\r\n        }\r\n      });\r\n  };\r\n  const obj = {\r\n    view: false,\r\n  };\r\n  const hStyle = { color: \"grey\" };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"table-data\">\r\n        <h5>All Members</h5>\r\n        <table className=\"table border shadow center mt-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Names</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.slice(0, data.length).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{user}</th>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectMembers;\r\n",{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":24,"column":8,"nodeType":"233","messageId":"234","endLine":24,"endColumn":27},{"ruleId":"231","severity":1,"message":"235","line":44,"column":16,"nodeType":"233","messageId":"234","endLine":44,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":49,"column":53,"nodeType":"238","messageId":"239","endLine":49,"endColumn":55},{"ruleId":"231","severity":1,"message":"240","line":19,"column":9,"nodeType":"233","messageId":"234","endLine":19,"endColumn":20},{"ruleId":"241","severity":1,"message":"242","line":23,"column":11,"nodeType":"243","endLine":23,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":39,"column":11,"nodeType":"243","endLine":39,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":44,"column":11,"nodeType":"243","endLine":44,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":67,"column":11,"nodeType":"243","endLine":67,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"235","line":10,"column":16,"nodeType":"233","messageId":"234","endLine":10,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":15,"column":6,"nodeType":"247","endLine":15,"endColumn":8,"suggestions":"248"},{"ruleId":"231","severity":1,"message":"235","line":12,"column":16,"nodeType":"233","messageId":"234","endLine":12,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":90,"column":23,"nodeType":"238","messageId":"251","endLine":90,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":91,"column":23,"nodeType":"238","messageId":"251","endLine":91,"endColumn":24},{"ruleId":"231","severity":1,"message":"252","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":15},{"ruleId":"231","severity":1,"message":"253","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":14},{"ruleId":"231","severity":1,"message":"254","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":31},{"ruleId":"231","severity":1,"message":"235","line":14,"column":16,"nodeType":"233","messageId":"234","endLine":14,"endColumn":23},{"ruleId":"245","severity":1,"message":"255","line":22,"column":6,"nodeType":"247","endLine":22,"endColumn":8,"suggestions":"256"},{"ruleId":"236","severity":1,"message":"257","line":47,"column":33,"nodeType":"238","messageId":"239","endLine":47,"endColumn":35},{"ruleId":"231","severity":1,"message":"258","line":63,"column":9,"nodeType":"233","messageId":"234","endLine":63,"endColumn":12},{"ruleId":"231","severity":1,"message":"259","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":21},{"ruleId":"231","severity":1,"message":"260","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":21},{"ruleId":"231","severity":1,"message":"235","line":13,"column":16,"nodeType":"233","messageId":"234","endLine":13,"endColumn":23},{"ruleId":"245","severity":1,"message":"261","line":21,"column":6,"nodeType":"247","endLine":21,"endColumn":17,"suggestions":"262"},{"ruleId":"249","severity":1,"message":"250","line":24,"column":64,"nodeType":"238","messageId":"251","endLine":24,"endColumn":65},{"ruleId":"249","severity":1,"message":"250","line":37,"column":60,"nodeType":"238","messageId":"251","endLine":37,"endColumn":61},{"ruleId":"231","severity":1,"message":"258","line":55,"column":9,"nodeType":"233","messageId":"234","endLine":55,"endColumn":12},{"ruleId":"231","severity":1,"message":"263","line":58,"column":9,"nodeType":"233","messageId":"234","endLine":58,"endColumn":15},{"ruleId":"231","severity":1,"message":"235","line":12,"column":16,"nodeType":"233","messageId":"234","endLine":12,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":95,"column":23,"nodeType":"238","messageId":"251","endLine":95,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":96,"column":23,"nodeType":"238","messageId":"251","endLine":96,"endColumn":24},{"ruleId":"231","severity":1,"message":"235","line":13,"column":16,"nodeType":"233","messageId":"234","endLine":13,"endColumn":23},{"ruleId":"245","severity":1,"message":"264","line":22,"column":6,"nodeType":"247","endLine":22,"endColumn":17,"suggestions":"265"},{"ruleId":"249","severity":1,"message":"250","line":26,"column":64,"nodeType":"238","messageId":"251","endLine":26,"endColumn":65},{"ruleId":"231","severity":1,"message":"258","line":71,"column":9,"nodeType":"233","messageId":"234","endLine":71,"endColumn":12},{"ruleId":"231","severity":1,"message":"235","line":11,"column":16,"nodeType":"233","messageId":"234","endLine":11,"endColumn":23},{"ruleId":"245","severity":1,"message":"266","line":20,"column":6,"nodeType":"247","endLine":20,"endColumn":26,"suggestions":"267"},{"ruleId":"249","severity":1,"message":"250","line":24,"column":64,"nodeType":"238","messageId":"251","endLine":24,"endColumn":65},{"ruleId":"231","severity":1,"message":"268","line":7,"column":3,"nodeType":"233","messageId":"234","endLine":7,"endColumn":30},{"ruleId":"231","severity":1,"message":"269","line":8,"column":3,"nodeType":"233","messageId":"234","endLine":8,"endColumn":23},{"ruleId":"231","severity":1,"message":"270","line":9,"column":3,"nodeType":"233","messageId":"234","endLine":9,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":30,"column":25,"nodeType":"238","messageId":"239","endLine":30,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":31,"column":30,"nodeType":"238","messageId":"239","endLine":31,"endColumn":32},{"ruleId":"236","severity":1,"message":"237","line":32,"column":25,"nodeType":"238","messageId":"239","endLine":32,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":57,"column":19,"nodeType":"238","messageId":"239","endLine":57,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":89,"column":15,"nodeType":"238","messageId":"239","endLine":89,"endColumn":17},{"ruleId":"231","severity":1,"message":"271","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":16,"column":21,"nodeType":"238","messageId":"239","endLine":16,"endColumn":23},{"ruleId":"231","severity":1,"message":"235","line":14,"column":16,"nodeType":"233","messageId":"234","endLine":14,"endColumn":23},{"ruleId":"231","severity":1,"message":"272","line":15,"column":10,"nodeType":"233","messageId":"234","endLine":15,"endColumn":14},{"ruleId":"231","severity":1,"message":"273","line":15,"column":16,"nodeType":"233","messageId":"234","endLine":15,"endColumn":23},{"ruleId":"231","severity":1,"message":"274","line":16,"column":10,"nodeType":"233","messageId":"234","endLine":16,"endColumn":12},{"ruleId":"245","severity":1,"message":"266","line":48,"column":6,"nodeType":"247","endLine":48,"endColumn":8,"suggestions":"275"},{"ruleId":"249","severity":1,"message":"250","line":52,"column":64,"nodeType":"238","messageId":"251","endLine":52,"endColumn":65},{"ruleId":"249","severity":1,"message":"250","line":82,"column":63,"nodeType":"238","messageId":"251","endLine":82,"endColumn":64},{"ruleId":"249","severity":1,"message":"250","line":127,"column":23,"nodeType":"238","messageId":"251","endLine":127,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":128,"column":23,"nodeType":"238","messageId":"251","endLine":128,"endColumn":24},{"ruleId":"231","severity":1,"message":"235","line":11,"column":16,"nodeType":"233","messageId":"234","endLine":11,"endColumn":23},{"ruleId":"245","severity":1,"message":"266","line":20,"column":6,"nodeType":"247","endLine":20,"endColumn":26,"suggestions":"276"},{"ruleId":"249","severity":1,"message":"250","line":24,"column":60,"nodeType":"238","messageId":"251","endLine":24,"endColumn":61},{"ruleId":"231","severity":1,"message":"235","line":14,"column":16,"nodeType":"233","messageId":"234","endLine":14,"endColumn":23},{"ruleId":"231","severity":1,"message":"274","line":15,"column":10,"nodeType":"233","messageId":"234","endLine":15,"endColumn":12},{"ruleId":"245","severity":1,"message":"266","line":49,"column":6,"nodeType":"247","endLine":49,"endColumn":8,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"250","line":53,"column":60,"nodeType":"238","messageId":"251","endLine":53,"endColumn":61},{"ruleId":"249","severity":1,"message":"250","line":85,"column":61,"nodeType":"238","messageId":"251","endLine":85,"endColumn":62},{"ruleId":"249","severity":1,"message":"250","line":134,"column":23,"nodeType":"238","messageId":"251","endLine":134,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":135,"column":23,"nodeType":"238","messageId":"251","endLine":135,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":23,"column":25,"nodeType":"238","messageId":"239","endLine":23,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":25,"column":32,"nodeType":"238","messageId":"239","endLine":25,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":27,"column":32,"nodeType":"238","messageId":"239","endLine":27,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":59,"column":25,"nodeType":"238","messageId":"239","endLine":59,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":61,"column":32,"nodeType":"238","messageId":"239","endLine":61,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":198,"column":17,"nodeType":"243","endLine":208,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":201,"column":33,"nodeType":"238","messageId":"239","endLine":201,"endColumn":35},{"ruleId":"241","severity":1,"message":"242","line":209,"column":17,"nodeType":"243","endLine":219,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":212,"column":33,"nodeType":"238","messageId":"239","endLine":212,"endColumn":35},{"ruleId":"241","severity":1,"message":"242","line":220,"column":17,"nodeType":"243","endLine":230,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":223,"column":33,"nodeType":"238","messageId":"239","endLine":223,"endColumn":35},{"ruleId":"231","severity":1,"message":"253","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":14},{"ruleId":"231","severity":1,"message":"259","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":21},{"ruleId":"231","severity":1,"message":"254","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":31},{"ruleId":"231","severity":1,"message":"260","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":21},{"ruleId":"231","severity":1,"message":"235","line":13,"column":16,"nodeType":"233","messageId":"234","endLine":13,"endColumn":23},{"ruleId":"231","severity":1,"message":"278","line":15,"column":7,"nodeType":"233","messageId":"234","endLine":15,"endColumn":14},{"ruleId":"245","severity":1,"message":"279","line":20,"column":6,"nodeType":"247","endLine":20,"endColumn":8,"suggestions":"280"},{"ruleId":"231","severity":1,"message":"258","line":36,"column":9,"nodeType":"233","messageId":"234","endLine":36,"endColumn":12},{"ruleId":"231","severity":1,"message":"263","line":39,"column":9,"nodeType":"233","messageId":"234","endLine":39,"endColumn":15},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'NoParticularProject' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTitle'. Either include it or remove the dependency array.","ArrayExpression",["283"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Route' is defined but never used.","'Link' is defined but never used.","'BiDotsVerticalRounded' is defined but never used.","React Hook useEffect has missing dependencies: 'getdata' and 'getloged'. Either include them or remove the dependency array.",["284"],"Expected '!==' and instead saw '!='.","'obj' is assigned a value but never used.","'GoDiffAdded' is defined but never used.","'IconContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getjtbd' and 'getuserStory'. Either include them or remove the dependency array.",["285"],"'hStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignStory', 'getAssignjtbd', and 'getuserStory'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["287"],"'SettingsApplicationsRounded' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'SwapCalls' is defined but never used.","'user' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'id' is assigned a value but never used.",["288"],["289"],["290"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNames'. Either include it or remove the dependency array.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"300","fix":"304"},{"desc":"302","fix":"305"},{"desc":"306","fix":"307"},"Update the dependencies array to be: [getTitle]",{"range":"308","text":"309"},"Update the dependencies array to be: [getdata, getloged]",{"range":"310","text":"311"},"Update the dependencies array to be: [getjtbd, getuserStory, projectID]",{"range":"312","text":"313"},"Update the dependencies array to be: [getAssignStory, getAssignjtbd, getuserStory, projectID]",{"range":"314","text":"315"},"Update the dependencies array to be: [getDetails, projectID, storyID]",{"range":"316","text":"317"},"Update the dependencies array to be: [getDetails]",{"range":"318","text":"319"},{"range":"320","text":"317"},{"range":"321","text":"319"},"Update the dependencies array to be: [getNames]",{"range":"322","text":"323"},[545,547],"[getTitle]",[767,769],"[getdata, getloged]",[757,768],"[getjtbd, getuserStory, projectID]",[832,843],"[getAssignStory, getAssignjtbd, getuserStory, projectID]",[694,714],"[getDetails, projectID, storyID]",[1214,1216],"[getDetails]",[694,714],[1234,1236],[697,699],"[getNames]"]