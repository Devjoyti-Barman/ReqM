[{"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\context\\userContext\\userContext.js":"3","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\pricing\\pricing.js":"4","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\myprojectSidebar.js":"5","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\resources\\resources.js":"6","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\product\\products.js":"7","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\homescreen.js":"8","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\projectSidebar.js":"9","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectHeader\\projectHeader.js":"10","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\userStory\\userStory.js":"11","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\svg.js":"12","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\svg.js":"13","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\header\\header.js":"14","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\footer\\footer.js":"15","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\NoParticularProjectLeft\\NoParticularProject.js":"16","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\allProjectSummery\\allProjectSummery.js":"17","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewallSummery\\ViewAll.js":"18","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\CreateReq\\createReq.js":"19","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\JTBD\\JTBD.js":"20","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ParticularProjectHomepage\\ParticularProjectHomepage.js":"21","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewSummery\\viewSummery.js":"22","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\welcome\\welcome.js":"23","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signin\\signin.js":"24","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editUserstory\\editUserStory.js":"25","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ViewJTBD\\viewJTBD.js":"26","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editJTBD\\EditJTBD.js":"27","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signup\\signup.js":"28","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ProjectMembers\\ProjectMembers.js":"29"},{"size":457,"mtime":1610898484078,"results":"30","hashOfConfig":"31"},{"size":5240,"mtime":1611139017614,"results":"32","hashOfConfig":"31"},{"size":450,"mtime":1611036664178,"results":"33","hashOfConfig":"31"},{"size":154,"mtime":1610737196781,"results":"34","hashOfConfig":"31"},{"size":1067,"mtime":1610737206829,"results":"35","hashOfConfig":"31"},{"size":136,"mtime":1610737150937,"results":"36","hashOfConfig":"31"},{"size":155,"mtime":1610737188761,"results":"37","hashOfConfig":"31"},{"size":2626,"mtime":1611132161538,"results":"38","hashOfConfig":"31"},{"size":3072,"mtime":1611088994288,"results":"39","hashOfConfig":"31"},{"size":1264,"mtime":1611089194085,"results":"40","hashOfConfig":"31"},{"size":7523,"mtime":1611035668237,"results":"41","hashOfConfig":"31"},{"size":61888,"mtime":1610737167279,"results":"42","hashOfConfig":"31"},{"size":61888,"mtime":1610737217414,"results":"43","hashOfConfig":"31"},{"size":745,"mtime":1610737238017,"results":"44","hashOfConfig":"31"},{"size":1744,"mtime":1610737245377,"results":"45","hashOfConfig":"31"},{"size":732,"mtime":1610780954413,"results":"46","hashOfConfig":"31"},{"size":3762,"mtime":1611138312221,"results":"47","hashOfConfig":"31"},{"size":3772,"mtime":1611086067966,"results":"48","hashOfConfig":"31"},{"size":1147,"mtime":1610918565570,"results":"49","hashOfConfig":"31"},{"size":8081,"mtime":1611067074965,"results":"50","hashOfConfig":"31"},{"size":5400,"mtime":1611130950443,"results":"51","hashOfConfig":"31"},{"size":2860,"mtime":1611043109704,"results":"52","hashOfConfig":"31"},{"size":7512,"mtime":1610979427754,"results":"53","hashOfConfig":"31"},{"size":3524,"mtime":1611093764718,"results":"54","hashOfConfig":"31"},{"size":9032,"mtime":1611044036311,"results":"55","hashOfConfig":"31"},{"size":2949,"mtime":1611086878198,"results":"56","hashOfConfig":"31"},{"size":9649,"mtime":1611073352739,"results":"57","hashOfConfig":"31"},{"size":7861,"mtime":1611131779152,"results":"58","hashOfConfig":"31"},{"size":1829,"mtime":1611139474206,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ezkwb8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\index.js",[],["131","132"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\App.js",["133","134"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\context\\userContext\\userContext.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\pricing\\pricing.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\myprojectSidebar.js",["135"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport svgPath from \"./svg\";\r\n\r\nexport default function Mysidebar() {\r\n  const [path, setPath] = useState(\"/\");\r\n  let history = useHistory();\r\n\r\n  // it will give me the pathname\r\n  let pathname = history.location.pathname;\r\n\r\n  // if the route = '/' then we will rerender it to projects\r\n  if (pathname === \"/\") {\r\n    history.push(\"/myprojects\");\r\n    setPath(\"/myprojects\");\r\n  }\r\n\r\n  const handleClick = (e, paths) => {\r\n    history.push(paths);\r\n    setPath(paths);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"header_img\">\r\n        <svg\r\n          width=\"122\"\r\n          height=\"44\"\r\n          viewBox=\"0 0 122 44\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d={svgPath} fill=\"#D1D1D6\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"sidebar__items\" id=\"sidebar__div\">\r\n        <div className=\"items\">My Projects</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\resources\\resources.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\product\\products.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\homescreen.js",["136","137","138","139"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\projectSidebar.js",["140"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport svgPath from \"./svg\";\r\n\r\nexport default function ProjectSidebar() {\r\n  const [path, setPath] = useState(\"/\");\r\n  let history = useHistory();\r\n\r\n  const courseID = useParams().projectID;\r\n  let generalPath = \"/myprojects/\" + courseID + \"/\";\r\n\r\n  // it will give me the pathname\r\n  let pathname = history.location.pathname;\r\n\r\n  if (pathname[pathname.length - 1] !== \"/\") pathname += \"/\";\r\n\r\n  //route path will give you the pathname\r\n  let routePath = pathname.split(generalPath)[1];\r\n  routePath = routePath.split(\"/\")[0];\r\n\r\n  // if the route = '/' then we will rerender it to projects\r\n  if (pathname === generalPath) {\r\n    history.push(generalPath + \"projects\");\r\n  }\r\n\r\n  const handleClick = (e, paths) => {\r\n    history.push(generalPath + paths);\r\n    setPath(paths);\r\n  };\r\n\r\n  const checkClick = () => {\r\n    // setTimeout is used because when\r\n    setTimeout(() => {\r\n      /*\r\n         1. here I have collect the children of sidebar__items\r\n         2. if the children attribute matches to the path then we will chage it to active color\r\n         3. else to will change it to non active color\r\n      */\r\n      // console.log(path);\r\n      if (path === \"/\") setPath(routePath);\r\n      let header = document.getElementsByClassName(\"sidebar__items\");\r\n      let childs = header.item(0).children;\r\n      for (let i = 0; i < childs.length; i++) {\r\n        if (childs.item(i).getAttribute(\"path\") === path) {\r\n          childs.item(i).style.color = \"#DBDCE0\";\r\n          childs.item(i).style.backgroundColor = \"#565659\";\r\n        } else {\r\n          childs.item(i).style.backgroundColor = \"#363740\";\r\n          childs.item(i).style.color = \"#a4a6b3\";\r\n        }\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"header_img\">\r\n        <svg\r\n          width=\"122\"\r\n          height=\"44\"\r\n          viewBox=\"0 0 122 44\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d={svgPath} fill=\"#D1D1D6\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"sidebar__items\" id=\"sidebar__div\">\r\n        <div\r\n          onClick={(e) => handleClick(e, \"projects\")}\r\n          className=\"projects items\"\r\n          path=\"projects\"\r\n        >\r\n          My Projects\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"watchlist\")}\r\n          className=\"watchlist items\"\r\n          path=\"watchlist\"\r\n        >\r\n          My Watchlist\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"assigned_req\")}\r\n          className=\"assigned_req items\"\r\n          path=\"assigned_req\"\r\n        >\r\n          Assigned Requirements\r\n        </div>\r\n        <div\r\n          onClick={(e) => handleClick(e, \"project_members\")}\r\n          className=\"project_members items\"\r\n          path=\"project_members\"\r\n        >\r\n          Project Members\r\n        </div>\r\n      </div>\r\n\r\n      {checkClick()}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectHeader\\projectHeader.js",["141","142"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n// this logo will come from user\r\nimport logo from \"./logo.png\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"./../../../context/userContext/userContext\";\r\n\r\nexport default function ProjectHeader() {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [title, setTitle] = useState(\"My Projects\");\r\n  let projectID = useParams().projectID;\r\n  useEffect(() => {\r\n    getTitle();\r\n  }, []);\r\n\r\n  const getTitle = async () => {\r\n    let api = \"http://localhost:3001/api/project/get-projects\";\r\n    axios.get(api, { headers: { authtoken: `${user}` } }).then((res) => {\r\n      let data = res.data;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i]._id === projectID) {\r\n          setTitle(data[i].projectName);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  let user_Name = JSON.parse(localStorage.getItem(\"Name\"));\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__title\">{title}</div>\r\n      <div className=\"user__info\">\r\n        <img className=\"img\" src={logo} alt={logo} />\r\n\r\n        <div className=\"user__name\"> {user_Name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\userStory\\userStory.js",["143","144","145"],"import React, { useState, useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function Userstory() {\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [priority, setPriority] = useState(\"Low\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    role: \"\",\r\n    want: \"\",\r\n    soThat: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    title,\r\n    role,\r\n    want,\r\n    soThat,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  let projectID = useParams().projectID;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/story/add-story\";\r\n    let story_Details = {\r\n      story_title: title,\r\n      as_a: role,\r\n      action_requirement: want,\r\n      action_output: soThat,\r\n      action_assigned_to: assignTo,\r\n      action_provided_by: providedBy,\r\n      action_received_mode: mode,\r\n      priority: priority,\r\n      details: details,\r\n    };\r\n\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.post(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"addreq\")[0];\r\n    path += \"viewall/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully captured !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>User Story role</h2>\r\n                <b>Story Title</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>As a</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Action to Be Done</h2>\r\n                <b>I Want To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"want\"\r\n                  value={want}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So That</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soThat\"\r\n                  value={soThat}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"High\")}\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Medium\")}\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Low\")}\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\projectSidebar\\svg.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\myprojectSidebar\\svg.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\header\\header.js",["146"],"import React from 'react';\r\nimport { Route,NavLink } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <div className=\"header-container\">\r\n            <div className=\"reqm-container\">ReqM !</div>\r\n            <div className=\"link-container\">\r\n               <NavLink to=\"/product\" className=\"link-inside-container\">Product</NavLink>\r\n               <NavLink to=\"/resource\" className=\"link-inside-container\">Resources</NavLink>\r\n               <NavLink to=\"/pricing\" className=\"link-inside-container\">Pricing</NavLink>\r\n               <NavLink to=\"/signin\" className=\"link-container-button link-inside-container\">Sign In</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\footer\\footer.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\NoParticularProjectLeft\\NoParticularProject.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\allProjectSummery\\allProjectSummery.js",["147","148","149","150","151","152"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewallSummery\\ViewAll.js",["153","154","155","156","157","158","159","160"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { GoDiffAdded } from \"react-icons/go\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ViewAll = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState([]);\r\n  const [datajtbd, setDatajtbd] = useState([]);\r\n  let history = useHistory();\r\n  let projectID = useParams().projectID;\r\n  useEffect(() => {\r\n    getuserStory();\r\n    getjtbd();\r\n  }, [projectID]);\r\n  const getuserStory = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setData(res.data);\r\n      });\r\n  };\r\n\r\n  const getjtbd = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setDatajtbd(res.data);\r\n      });\r\n  };\r\n  const historyView = (id, name) => {\r\n    let path = history.location.pathname;\r\n    if (path[path.length - 1] !== \"/\") path += \"/\";\r\n\r\n    path += name;\r\n    history.push(path + id);\r\n  };\r\n\r\n  const obj = {\r\n    view: false,\r\n  };\r\n  const hStyle = { color: \"grey\" };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"table-data\">\r\n        <h5>All Requirements</h5>\r\n        <table className=\"table border shadow center mt-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Requirement</th>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Date</th>\r\n              <th scope=\"col\">Priority</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.slice(0, data.length).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">Req: {index + 1}</th>\r\n                <td\r\n                  className=\"story__title\"\r\n                  onClick={() => historyView(user._id, \"\")}\r\n                >\r\n                  {user.storyDetails.storyTitle}\r\n                </td>\r\n                <td>{user.storyDetails.date}</td>\r\n                <td className=\"text-danger\">{user.storyDetails.priority}</td>\r\n                <td>\r\n                  <Link className=\" mr-2\" to={`/users/${user.id}`}>\r\n                    <BiDotsVerticalRounded />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n\r\n          <tbody>\r\n            {datajtbd.slice(0, datajtbd.length).map((user, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">JTBD: {index + 1}</th>\r\n                <td\r\n                  className=\"story__title\"\r\n                  onClick={() => historyView(user._id, \"jtbd/\")}\r\n                >\r\n                  {user.JobTobeDone.description}\r\n                </td>\r\n                <td>{100}</td>\r\n                <td className=\"text-danger\">{user.JobTobeDone.priority}</td>\r\n                <td>\r\n                  <Link className=\" mr-2\" to={`/users/${user.id}`}>\r\n                    <BiDotsVerticalRounded />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAll;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\CreateReq\\createReq.js",[],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\JTBD\\JTBD.js",["161","162","163"],"import React, { useState, useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function Userstory() {\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [priority, setPriority] = useState(\"Low\");\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n    persona: \"\",\r\n    situation: \"\",\r\n    whatiwant: \"\",\r\n    soican: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    description,\r\n    persona,\r\n    situation,\r\n    whatiwant,\r\n    soican,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  let projectID = useParams().projectID;\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/jtbd/add-jtbd\";\r\n    let story_Details = {\r\n      description: description,\r\n      persona: persona,\r\n      situation: situation,\r\n      whatiwant: whatiwant,\r\n      soican: soican,\r\n      assignTo: assignTo,\r\n      details: details,\r\n      watchlist: watchlist,\r\n      providedBy: providedBy,\r\n      mode: mode,\r\n      priority: priority,\r\n    };\r\n    //console.log(story_Details);\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.post(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n\r\n  //###########################     Change #######################\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"addreq\")[0];\r\n    path += \"viewall/jtbd/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully captured !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Base details</h2>\r\n                <b>Description</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Persona</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"persona\"\r\n                  value={persona}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Job to Be Done</h2>\r\n                <b>Situation</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"situation\"\r\n                  value={situation}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>What I Want</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"whatiwant\"\r\n                  value={whatiwant}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So I can</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soican\"\r\n                  value={soican}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"High\")}\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Medium\")}\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() => setPriority(\"Low\")}\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ParticularProjectHomepage\\ParticularProjectHomepage.js",["164","165","166","167"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\viewSummery\\viewSummery.js",["168","169","170"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\nimport \"./style.css\";\r\nexport default function ViewSummery() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [data, setData] = useState({});\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  let history = useHistory();\r\n  let path = history.location.pathname;\r\n  if (path[path.length - 1] !== \"/\") path += \"/\";\r\n  //console.log(projectID);\r\n  //console.log(storyID);\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [projectID, storyID]);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            setData(res.data[i].storyDetails);\r\n          }\r\n        }\r\n      });\r\n  };\r\n  //console.log(data);\r\n\r\n  return (\r\n    <div className=\"viewSummery\">\r\n      <div className=\"view__story view__part1\">\r\n        <div className=\"userstory__header\">Story Title</div>\r\n        <div className=\"userstory__data\">{data.storyTitle}</div>\r\n        <div className=\"userstory__header\">As a</div>\r\n        <div className=\"userstory__data\">{data.asA}</div>\r\n        <div className=\"userstory__header\">I Want to</div>\r\n        <div className=\"userstory__data\">{data.actionRequirement}</div>\r\n      </div>\r\n      <div className=\"view__story view__part2\">\r\n        <div className=\"userstory__header\">So That</div>\r\n        <div className=\"userstory__data\">{data.actionOutput}</div>\r\n        <div className=\"userstory__header\">Provided By</div>\r\n        <div className=\"userstory__data\">{data.actionProvidedBy}</div>\r\n        <div className=\"userstory__header\">Mode</div>\r\n        <div className=\"userstory__data\">{data.actionReceivedMode}</div>\r\n      </div>\r\n      <div className=\"view__story view__part3\">\r\n        <div className=\"userstory__header\">Additional Details</div>\r\n        <div className=\"userstory__data\">{data.details}</div>\r\n        <div className=\"userstory__header\">Assigned To</div>\r\n        <div className=\"userstory__data\">{data.actionAssignedTo}</div>\r\n        <div className=\"userstory__header\">Priortization</div>\r\n        <div className=\"userstory__data userstory__data__priority\">\r\n          {data.priority}\r\n        </div>\r\n      </div>\r\n      <div className=\"div__button\">\r\n        <div\r\n          className=\"BUTTON\"\r\n          onClick={() => {\r\n            history.push(path + \"edit\");\r\n          }}\r\n        >\r\n          Edit\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\homescreen\\welcome\\welcome.js",["171","172","173","174","175","176","177","178"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signin\\signin.js",["179","180"],"import React, { useContext, useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./signin.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nconst Signin = () => {\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  var history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.id == \"email\") {\r\n      setEmail(e.target.value);\r\n    } else {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (validator.isEmail(email)) {\r\n      // console.log(password);\r\n      axios\r\n        .post(\"http://localhost:3001/api/user/login\", {\r\n          email,\r\n          password,\r\n        })\r\n        .then((res) => {\r\n          if (res.data && res.data.message) {\r\n            localStorage.setItem(\r\n              \"auth_token\",\r\n              JSON.stringify(res.data.auth_token)\r\n            );\r\n            localStorage.setItem(\"Name\", JSON.stringify(res.data.Name));\r\n            localStorage.setItem(\"email\", JSON.stringify(res.data.email));\r\n            //console.log(res.data);\r\n            setUser(res.data.auth_token);\r\n            //console.log(res.data);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            history.push(\"/\");\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: `${res.data.error}`,\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: `${err}`,\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Email Invalid\",\r\n        text: \"Please Enter Valid Email\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n    // let hashPwd=password;\r\n    // hashPwd=await bcrypt.hash(password,10);\r\n  };\r\n\r\n  return (\r\n    <div className=\"parentConatiner\">\r\n      <div className=\"headerContainerSignIn\">\r\n        <span className=\"signinOptions\">About</span>\r\n        <span className=\"signinOptions\">Privacy</span>\r\n        <span className=\"signinOptions\">Terms</span>\r\n      </div>\r\n      <div className=\"signinBody\">\r\n        <span className=\"companyName signinReqm\">ReqM !</span>\r\n        <div className=\"signinBox\">\r\n          <div className=\"signInContent\">\r\n            <span className=\"signInHeading\">SignIn</span>\r\n            <span className=\"singinMessage\">Welcome we miss you</span>\r\n            <input\r\n              type=\"email\"\r\n              className=\"signupInput\"\r\n              onChange={handleInput}\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n            />\r\n            <input\r\n              style={{ marginTop: \"10px\" }}\r\n              type=\"password\"\r\n              className=\"signupInput\"\r\n              onChange={handleInput}\r\n              id=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n            />\r\n            <div className=\"rememberAndPassword\">\r\n              <span>Remember me</span>\r\n              <span>Forgot Password</span>\r\n            </div>\r\n            <button className=\"singinButton\" onClick={handleSignIn}>\r\n              Singin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editUserstory\\editUserStory.js",["181","182","183","184","185","186","187","188","189"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function EditUserstory() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [data, setData] = useState();\r\n  const [id, setID] = useState();\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    role: \"\",\r\n    want: \"\",\r\n    soThat: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n    priority: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    title,\r\n    role,\r\n    want,\r\n    soThat,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n    priority,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, []);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/story/get-stories/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            //console.log(res.data[i].storyDetails);\r\n            let Details = {\r\n              title: res.data[i].storyDetails.storyTitle,\r\n              role: res.data[i].storyDetails.asA,\r\n              want: res.data[i].storyDetails.actionRequirement,\r\n              soThat: res.data[i].storyDetails.actionOutput,\r\n              assignTo: res.data[i].storyDetails.actionAssignedTo,\r\n              details: res.data[i].storyDetails.details,\r\n              providedBy: res.data[i].storyDetails.actionProvidedBy,\r\n              mode: res.data[i].storyDetails.actionReceivedMode,\r\n              priority: res.data[i].storyDetails.priority,\r\n            };\r\n            // console.log(Details);\r\n            // console.log(res.data[i].storyDetails);\r\n            setFormData({ ...Details });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/story/update-story/\" + `${storyID}`;\r\n    let story_Details = {\r\n      story_title: title,\r\n      as_a: role,\r\n      action_requirement: want,\r\n      action_output: soThat,\r\n      action_assigned_to: assignTo,\r\n      action_provided_by: providedBy,\r\n      action_received_mode: mode,\r\n      priority: priority,\r\n      details: details,\r\n    };\r\n\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.put(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong!\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"edit\")[0];\r\n\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully Updated !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>User Story role</h2>\r\n                <b>Story Title</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>As a</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Action to Be Done</h2>\r\n                <b>I Want To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"want\"\r\n                  value={want}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So That</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soThat\"\r\n                  value={soThat}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"High\" })\r\n                    }\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Medium\" })\r\n                    }\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Low\" })\r\n                    }\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ViewJTBD\\viewJTBD.js",["190","191","192"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\nimport \"./style.css\";\r\nexport default function ViewSummery() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [data, setData] = useState({});\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  let history = useHistory();\r\n  let path = history.location.pathname;\r\n  if (path[path.length - 1] !== \"/\") path += \"/\";\r\n  //console.log(projectID);\r\n  //console.log(storyID);\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [projectID, storyID]);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            setData(res.data[i].JobTobeDone);\r\n          }\r\n        }\r\n      });\r\n  };\r\n  //console.log(data);\r\n\r\n  return (\r\n    <div className=\"viewSummery\">\r\n      <div className=\"view__story view__part1\">\r\n        <div className=\"userstory__header\">Description</div>\r\n        <div className=\"userstory__data\">{data.description}</div>\r\n        <div className=\"userstory__header\">Persona</div>\r\n        <div className=\"userstory__data\">{data.persona}</div>\r\n        <div className=\"userstory__header\">Situation</div>\r\n        <div className=\"userstory__data\">{data.situation}</div>\r\n        <div className=\"userstory__header\">What I Want</div>\r\n        <div className=\"userstory__data\">{data.whatiwant}</div>\r\n      </div>\r\n      <div className=\"view__story view__part2\">\r\n        <div className=\"userstory__header\">So I can</div>\r\n        <div className=\"userstory__data\">{data.soican}</div>\r\n        <div className=\"userstory__header\">Provided By</div>\r\n        <div className=\"userstory__data\">{data.providedBy}</div>\r\n        <div className=\"userstory__header\">Mode</div>\r\n        <div className=\"userstory__data\">{data.mode}</div>\r\n        <div className=\"userstory__header\">Priortization</div>\r\n        <div className=\"userstory__data userstory__data__priority\">\r\n          {data.priority}\r\n        </div>\r\n      </div>\r\n      <div className=\"view__story view__part3\">\r\n        <div className=\"userstory__header\">Additional Details</div>\r\n        <div className=\"userstory__data\">{data.details}</div>\r\n        <div className=\"userstory__header\">Assigned To</div>\r\n        <div className=\"userstory__data\">{data.assignTo}</div>\r\n      </div>\r\n      <div className=\"div__button\">\r\n        <div\r\n          className=\"BUTTON\"\r\n          onClick={() => {\r\n            history.push(path + \"edit\");\r\n          }}\r\n        >\r\n          Edit\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\editJTBD\\EditJTBD.js",["193","194","195","196","197","198","199"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Modal from \"react-modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"./../../context/userContext/userContext\";\r\n\r\nexport default function EditJTBD() {\r\n  let projectID = useParams().projectID;\r\n  let storyID = useParams().storyID;\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [id, setID] = useState();\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n    persona: \"\",\r\n    situation: \"\",\r\n    whatiwant: \"\",\r\n    soican: \"\",\r\n    assignTo: \"\",\r\n    details: \"\",\r\n    watchlist: \"\",\r\n    providedBy: \"\",\r\n    mode: \"\",\r\n    priority: \"\",\r\n  });\r\n  const [story, setStory] = useState(1);\r\n  const {\r\n    description,\r\n    persona,\r\n    situation,\r\n    whatiwant,\r\n    soican,\r\n    assignTo,\r\n    details,\r\n    watchlist,\r\n    providedBy,\r\n    mode,\r\n    priority,\r\n  } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, []);\r\n\r\n  const getDetails = async () => {\r\n    let api =\r\n      \"http://localhost:3001/api/jtbd/get-jtbd/projectId/\" + `${projectID}`;\r\n    axios\r\n      .get(api, {\r\n        headers: { authtoken: `${user}` },\r\n      })\r\n      .then((res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          if (res.data[i]._id === storyID) {\r\n            //console.log(res.data[i]);\r\n            let Details = {\r\n              description: res.data[i].JobTobeDone.description,\r\n              persona: res.data[i].JobTobeDone.persona,\r\n              situation: res.data[i].JobTobeDone.situation,\r\n              whatiwant: res.data[i].JobTobeDone.whatiwant,\r\n              soican: res.data[i].JobTobeDone.soican,\r\n              assignTo: res.data[i].JobTobeDone.assignTo,\r\n              details: res.data[i].JobTobeDone.details,\r\n              watchlist: res.data[i].JobTobeDone.watchlist,\r\n              providedBy: res.data[i].JobTobeDone.providedBy,\r\n              mode: res.data[i].JobTobeDone.mode,\r\n              priority: res.data[i].JobTobeDone.priority,\r\n            };\r\n            // console.log(Details);\r\n            // console.log(res.data[i].storyDetails);\r\n            setFormData({ ...Details });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let api = \"http://localhost:3001/api/jtbd/update-jtbd/\" + `${storyID}`;\r\n    let story_Details = {\r\n      description: description,\r\n      persona: persona,\r\n      situation: situation,\r\n      whatiwant: whatiwant,\r\n      soican: soican,\r\n      assignTo: assignTo,\r\n      details: details,\r\n      watchlist: watchlist,\r\n      providedBy: providedBy,\r\n      mode: mode,\r\n      priority: priority,\r\n    };\r\n    //console.log(story_Details);\r\n    //validation\r\n    //console.log(story_Details);\r\n    const data = {\r\n      project_id: projectID,\r\n      story_details: story_Details,\r\n    };\r\n    try {\r\n      let p = await axios.put(api, data, {\r\n        headers: {\r\n          authtoken: `${user}`,\r\n        },\r\n      });\r\n      setOpen(true);\r\n      setID(p.data.story);\r\n      //console.log(p.data.story);\r\n      // /console.log(message);\r\n    } catch (e) {\r\n      window.alert(\"Something went Wrong\");\r\n    }\r\n  };\r\n  let history = useHistory();\r\n\r\n  //###########################     Change #######################\r\n  const PushViewSumeery = () => {\r\n    let path = history.location.pathname.split(\"edit\")[0];\r\n    //path += \"/viewall/jtbd/\" + id;\r\n    history.push(path);\r\n    //console.log(id);\r\n  };\r\n\r\n  let className1 = \"story_1\";\r\n  let className2 = \"story_2\";\r\n  //console.log(story);\r\n  if (story === 1) {\r\n    className1 += \" \" + \"active\";\r\n    className2 += \" \" + \"nonactive\";\r\n  } else {\r\n    className1 += \" nonactive\";\r\n    className2 += \" active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"userStory__container\">\r\n      <Modal isOpen={open} className=\"viewSummery__modal\">\r\n        <div className=\"viewSummery\">\r\n          <p>Requirement Title has been succesfully Updated !!</p>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={PushViewSumeery}>\r\n            View Summery\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className={className1}>\r\n        <div>\r\n          <form className=\"form\">\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Base details</h2>\r\n                <b>Description</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Persona</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"persona\"\r\n                  value={persona}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <h2>Job to Be Done</h2>\r\n                <b>Situation</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"situation\"\r\n                  value={situation}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>What I Want</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"whatiwant\"\r\n                  value={whatiwant}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>So I can</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"soican\"\r\n                  value={soican}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"btn btn-primary \" onClick={() => setStory(2)}>\r\n                Next\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={className2}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Assign To</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignTo\"\r\n                  value={assignTo}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Additional Details</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"details\"\r\n                  value={details}\r\n                  onChange={(e) => onChange(e)}\r\n                  className=\"inpt-box\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input type=\"checkbox\" name=\"watchlist\" value={watchlist} />\r\n              <span> Add to watchlist </span>\r\n            </div>\r\n            <div className=\"container has-box\">\r\n              <div className=\"form-group\">\r\n                <b>Provide By</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"providedBy\"\r\n                  value={providedBy}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <b>Mode</b>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mode\"\r\n                  value={mode}\r\n                  onChange={(e) => onChange(e)}\r\n                  required\r\n                  className=\"inpt-box\"\r\n                />\r\n                <br></br>\r\n                <div>\r\n                  <b>Priority</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"High\" })\r\n                    }\r\n                  />\r\n                  <b>High</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Medium\" })\r\n                    }\r\n                  />\r\n                  <b>Medium</b>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    onClick={() =>\r\n                      setFormData({ ...formData, priority: \"Low\" })\r\n                    }\r\n                  />\r\n                  <b>Low</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"container\">\r\n              <button className=\"btn btn-primary\" onClick={onSubmit}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\ReqM\\src\\components\\signup\\signup.js",["200","201","202","203","204","205","206","207","208","209","210"],"C:\\Users\\ASUS\\Desktop\\ReqM\\src\\pages\\ProjectMembers\\ProjectMembers.js",["211","212","213","214","215","216","217","218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":21,"column":8,"nodeType":"226","messageId":"227","endLine":21,"endColumn":27},{"ruleId":"224","severity":1,"message":"228","line":42,"column":16,"nodeType":"226","messageId":"227","endLine":42,"endColumn":23},{"ruleId":"224","severity":1,"message":"229","line":19,"column":9,"nodeType":"226","messageId":"227","endLine":19,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":23,"column":11,"nodeType":"232","endLine":23,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":39,"column":11,"nodeType":"232","endLine":39,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":44,"column":11,"nodeType":"232","endLine":44,"endColumn":31},{"ruleId":"230","severity":1,"message":"231","line":67,"column":11,"nodeType":"232","endLine":67,"endColumn":31},{"ruleId":"224","severity":1,"message":"233","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"228","line":10,"column":16,"nodeType":"226","messageId":"227","endLine":10,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":15,"column":6,"nodeType":"236","endLine":15,"endColumn":8,"suggestions":"237"},{"ruleId":"224","severity":1,"message":"228","line":12,"column":16,"nodeType":"226","messageId":"227","endLine":12,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":90,"column":23,"nodeType":"240","messageId":"241","endLine":90,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":91,"column":23,"nodeType":"240","messageId":"241","endLine":91,"endColumn":24},{"ruleId":"224","severity":1,"message":"242","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":15},{"ruleId":"224","severity":1,"message":"243","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"244","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":14,"column":16,"nodeType":"226","messageId":"227","endLine":14,"endColumn":23},{"ruleId":"234","severity":1,"message":"245","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":8,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":47,"column":33,"nodeType":"240","messageId":"249","endLine":47,"endColumn":35},{"ruleId":"224","severity":1,"message":"250","line":63,"column":9,"nodeType":"226","messageId":"227","endLine":63,"endColumn":12},{"ruleId":"224","severity":1,"message":"251","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":21},{"ruleId":"224","severity":1,"message":"252","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":21},{"ruleId":"224","severity":1,"message":"228","line":13,"column":16,"nodeType":"226","messageId":"227","endLine":13,"endColumn":23},{"ruleId":"234","severity":1,"message":"253","line":21,"column":6,"nodeType":"236","endLine":21,"endColumn":17,"suggestions":"254"},{"ruleId":"238","severity":1,"message":"239","line":24,"column":64,"nodeType":"240","messageId":"241","endLine":24,"endColumn":65},{"ruleId":"238","severity":1,"message":"239","line":37,"column":60,"nodeType":"240","messageId":"241","endLine":37,"endColumn":61},{"ruleId":"224","severity":1,"message":"250","line":55,"column":9,"nodeType":"226","messageId":"227","endLine":55,"endColumn":12},{"ruleId":"224","severity":1,"message":"255","line":58,"column":9,"nodeType":"226","messageId":"227","endLine":58,"endColumn":15},{"ruleId":"224","severity":1,"message":"228","line":12,"column":16,"nodeType":"226","messageId":"227","endLine":12,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":95,"column":23,"nodeType":"240","messageId":"241","endLine":95,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":96,"column":23,"nodeType":"240","messageId":"241","endLine":96,"endColumn":24},{"ruleId":"224","severity":1,"message":"228","line":13,"column":16,"nodeType":"226","messageId":"227","endLine":13,"endColumn":23},{"ruleId":"234","severity":1,"message":"256","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":17,"suggestions":"257"},{"ruleId":"238","severity":1,"message":"239","line":26,"column":64,"nodeType":"240","messageId":"241","endLine":26,"endColumn":65},{"ruleId":"224","severity":1,"message":"250","line":71,"column":9,"nodeType":"226","messageId":"227","endLine":71,"endColumn":12},{"ruleId":"224","severity":1,"message":"228","line":11,"column":16,"nodeType":"226","messageId":"227","endLine":11,"endColumn":23},{"ruleId":"234","severity":1,"message":"258","line":20,"column":6,"nodeType":"236","endLine":20,"endColumn":26,"suggestions":"259"},{"ruleId":"238","severity":1,"message":"239","line":24,"column":64,"nodeType":"240","messageId":"241","endLine":24,"endColumn":65},{"ruleId":"224","severity":1,"message":"260","line":7,"column":3,"nodeType":"226","messageId":"227","endLine":7,"endColumn":30},{"ruleId":"224","severity":1,"message":"261","line":8,"column":3,"nodeType":"226","messageId":"227","endLine":8,"endColumn":23},{"ruleId":"224","severity":1,"message":"262","line":9,"column":3,"nodeType":"226","messageId":"227","endLine":9,"endColumn":12},{"ruleId":"247","severity":1,"message":"263","line":30,"column":25,"nodeType":"240","messageId":"249","endLine":30,"endColumn":27},{"ruleId":"247","severity":1,"message":"263","line":31,"column":30,"nodeType":"240","messageId":"249","endLine":31,"endColumn":32},{"ruleId":"247","severity":1,"message":"263","line":32,"column":25,"nodeType":"240","messageId":"249","endLine":32,"endColumn":27},{"ruleId":"247","severity":1,"message":"263","line":57,"column":19,"nodeType":"240","messageId":"249","endLine":57,"endColumn":21},{"ruleId":"247","severity":1,"message":"263","line":89,"column":15,"nodeType":"240","messageId":"249","endLine":89,"endColumn":17},{"ruleId":"224","severity":1,"message":"264","line":10,"column":10,"nodeType":"226","messageId":"227","endLine":10,"endColumn":14},{"ruleId":"247","severity":1,"message":"263","line":16,"column":21,"nodeType":"240","messageId":"249","endLine":16,"endColumn":23},{"ruleId":"224","severity":1,"message":"228","line":14,"column":16,"nodeType":"226","messageId":"227","endLine":14,"endColumn":23},{"ruleId":"224","severity":1,"message":"265","line":15,"column":10,"nodeType":"226","messageId":"227","endLine":15,"endColumn":14},{"ruleId":"224","severity":1,"message":"266","line":15,"column":16,"nodeType":"226","messageId":"227","endLine":15,"endColumn":23},{"ruleId":"224","severity":1,"message":"267","line":16,"column":10,"nodeType":"226","messageId":"227","endLine":16,"endColumn":12},{"ruleId":"234","severity":1,"message":"258","line":48,"column":6,"nodeType":"236","endLine":48,"endColumn":8,"suggestions":"268"},{"ruleId":"238","severity":1,"message":"239","line":52,"column":64,"nodeType":"240","messageId":"241","endLine":52,"endColumn":65},{"ruleId":"238","severity":1,"message":"239","line":82,"column":63,"nodeType":"240","messageId":"241","endLine":82,"endColumn":64},{"ruleId":"238","severity":1,"message":"239","line":127,"column":23,"nodeType":"240","messageId":"241","endLine":127,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":128,"column":23,"nodeType":"240","messageId":"241","endLine":128,"endColumn":24},{"ruleId":"224","severity":1,"message":"228","line":11,"column":16,"nodeType":"226","messageId":"227","endLine":11,"endColumn":23},{"ruleId":"234","severity":1,"message":"258","line":20,"column":6,"nodeType":"236","endLine":20,"endColumn":26,"suggestions":"269"},{"ruleId":"238","severity":1,"message":"239","line":24,"column":60,"nodeType":"240","messageId":"241","endLine":24,"endColumn":61},{"ruleId":"224","severity":1,"message":"228","line":14,"column":16,"nodeType":"226","messageId":"227","endLine":14,"endColumn":23},{"ruleId":"224","severity":1,"message":"267","line":15,"column":10,"nodeType":"226","messageId":"227","endLine":15,"endColumn":12},{"ruleId":"234","severity":1,"message":"258","line":49,"column":6,"nodeType":"236","endLine":49,"endColumn":8,"suggestions":"270"},{"ruleId":"238","severity":1,"message":"239","line":53,"column":60,"nodeType":"240","messageId":"241","endLine":53,"endColumn":61},{"ruleId":"238","severity":1,"message":"239","line":85,"column":61,"nodeType":"240","messageId":"241","endLine":85,"endColumn":62},{"ruleId":"238","severity":1,"message":"239","line":134,"column":23,"nodeType":"240","messageId":"241","endLine":134,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":135,"column":23,"nodeType":"240","messageId":"241","endLine":135,"endColumn":24},{"ruleId":"247","severity":1,"message":"263","line":23,"column":25,"nodeType":"240","messageId":"249","endLine":23,"endColumn":27},{"ruleId":"247","severity":1,"message":"263","line":25,"column":32,"nodeType":"240","messageId":"249","endLine":25,"endColumn":34},{"ruleId":"247","severity":1,"message":"263","line":27,"column":32,"nodeType":"240","messageId":"249","endLine":27,"endColumn":34},{"ruleId":"247","severity":1,"message":"263","line":59,"column":25,"nodeType":"240","messageId":"249","endLine":59,"endColumn":27},{"ruleId":"247","severity":1,"message":"263","line":61,"column":32,"nodeType":"240","messageId":"249","endLine":61,"endColumn":34},{"ruleId":"230","severity":1,"message":"231","line":198,"column":17,"nodeType":"232","endLine":208,"endColumn":19},{"ruleId":"247","severity":1,"message":"263","line":201,"column":33,"nodeType":"240","messageId":"249","endLine":201,"endColumn":35},{"ruleId":"230","severity":1,"message":"231","line":209,"column":17,"nodeType":"232","endLine":219,"endColumn":19},{"ruleId":"247","severity":1,"message":"263","line":212,"column":33,"nodeType":"240","messageId":"249","endLine":212,"endColumn":35},{"ruleId":"230","severity":1,"message":"231","line":220,"column":17,"nodeType":"232","endLine":230,"endColumn":19},{"ruleId":"247","severity":1,"message":"263","line":223,"column":33,"nodeType":"240","messageId":"249","endLine":223,"endColumn":35},{"ruleId":"224","severity":1,"message":"243","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"251","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":21},{"ruleId":"224","severity":1,"message":"244","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":31},{"ruleId":"224","severity":1,"message":"252","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":21},{"ruleId":"224","severity":1,"message":"228","line":13,"column":16,"nodeType":"226","messageId":"227","endLine":13,"endColumn":23},{"ruleId":"224","severity":1,"message":"271","line":15,"column":7,"nodeType":"226","messageId":"227","endLine":15,"endColumn":14},{"ruleId":"234","severity":1,"message":"272","line":20,"column":6,"nodeType":"236","endLine":20,"endColumn":8,"suggestions":"273"},{"ruleId":"224","severity":1,"message":"250","line":36,"column":9,"nodeType":"226","messageId":"227","endLine":36,"endColumn":12},{"ruleId":"224","severity":1,"message":"255","line":39,"column":9,"nodeType":"226","messageId":"227","endLine":39,"endColumn":15},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'NoParticularProject' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTitle'. Either include it or remove the dependency array.","ArrayExpression",["276"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Route' is defined but never used.","'Link' is defined but never used.","'BiDotsVerticalRounded' is defined but never used.","React Hook useEffect has missing dependencies: 'getdata' and 'getloged'. Either include them or remove the dependency array.",["277"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'obj' is assigned a value but never used.","'GoDiffAdded' is defined but never used.","'IconContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getjtbd' and 'getuserStory'. Either include them or remove the dependency array.",["278"],"'hStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignStory', 'getAssignjtbd', and 'getuserStory'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["280"],"'SettingsApplicationsRounded' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'SwapCalls' is defined but never used.","Expected '===' and instead saw '=='.","'user' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'id' is assigned a value but never used.",["281"],["282"],["283"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNames'. Either include it or remove the dependency array.",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"293","fix":"297"},{"desc":"295","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [getTitle]",{"range":"301","text":"302"},"Update the dependencies array to be: [getdata, getloged]",{"range":"303","text":"304"},"Update the dependencies array to be: [getjtbd, getuserStory, projectID]",{"range":"305","text":"306"},"Update the dependencies array to be: [getAssignStory, getAssignjtbd, getuserStory, projectID]",{"range":"307","text":"308"},"Update the dependencies array to be: [getDetails, projectID, storyID]",{"range":"309","text":"310"},"Update the dependencies array to be: [getDetails]",{"range":"311","text":"312"},{"range":"313","text":"310"},{"range":"314","text":"312"},"Update the dependencies array to be: [getNames]",{"range":"315","text":"316"},[545,547],"[getTitle]",[767,769],"[getdata, getloged]",[757,768],"[getjtbd, getuserStory, projectID]",[832,843],"[getAssignStory, getAssignjtbd, getuserStory, projectID]",[694,714],"[getDetails, projectID, storyID]",[1214,1216],"[getDetails]",[694,714],[1234,1236],[697,699],"[getNames]"]